create database Library; -- bir kez database oluşturulurken çalıştırılır.


use Kutuphane -- bu kütüphaneyi kullanarak tablo ekleyebiliriz.


1) 
create table Adresler( -- Adres bilgilerini tutan tablo
adresNo int not null identity(1,1) Primary Key, -- Benzersiz adres numarası
sehir nvarchar(100), -- Şehir bilgisi
cadde nvarchar(100), -- Cadde bilgisi
mahalle nvarchar(100), -- Mahalle bilgisi
binaNo int, -- Bina numarası
postaKodu int, -- Posta kodu
ulke nvarchar(100) -- Ülke bilgisi
);



2)
create table uyeler( -- Kütüphane üyelerinin bilgilerini tutan tablo
uyeNo int not null identity(1,1) Primary Key, -- Benzersiz üye numarası
uyeAdi nvarchar(50) not null, -- Üye adı (boş olamaz)
uyeSoyadi nvarchar(50) not null, -- Üye soyadı (boş olamaz)
eposta nvarchar(100), -- E-posta adresi
telefon nvarchar(100), -- Telefon numarası
cinsiyet char(2), -- Cinsiyet bilgisi
adresNO int Foreign Key(adresNo) REFERENCES -- Üyenin adres bilgisi
adresler(adresNO)
);



3) 
create table kutuphane( -- Kütüphane bilgilerini tutan tablo
kutuphaneNO int not null identity(1,1) primary key, -- Benzersiz kütüphane numarası
kutuphaneIsmi nvarchar(100) not null, -- Kütüphane ismi (boş olamaz)
aciklama nvarchar(150), -- Kütüphane açıklaması
adresNo int foreign key (adresNo) references adresler(adresNo) -- Kütüphanenin adres bilgisi
);



4)
create table kitaplar( -- Kitap bilgilerini tutan tablo
ISBN int not null primary key, -- Kitabın ISBN numarası (benzersiz)
sayfaSayisi int, -- Kitabın sayfa sayısı
kitapAdi nvarchar(100) not null, -- Kitap adı (boş olamaz)
yayinTarihi nvarchar(100) -- Kitabın yayın tarihi
);



5)
create table emanet( -- Kitap ödünç alma işlemlerini tutan tablo
emanetNO int not null identity(1,1) Primary Key, -- Benzersiz emanet numarası
emanetTarihi nvarchar(100), -- Emanet alma tarihi
teslimTarihi nvarchar(100), -- Teslim tarihi
uyeNo int Foreign Key (uyeNo) references uyeler(uyeNo), -- Emanet alan üye
kutuphaneNo int Foreign Key (kutuphaneNo) references kutuphane (kutuphaneNo), -- Emanet alınan kütüphane
ISBN int Foreign Key (ISBN) references kitaplar(ISBN) -- Emanet alınan kitap
);



6)
create table kitap_bulunur( -- Kütüphanelerdeki kitapların miktarını tutan tablo
kutuphaneNo int Foreign Key (kutuphaneNo) references kutuphane (kutuphaneNo), -- Kütüphane numarası
ISBN int Foreign Key (ISBN) references kitaplar(ISBN), -- Kitap ISBN
Miktar int NOT NULL -- Kitabın kütüphanedeki miktarı
);



7)
create table Yazar( -- Kitap-Yazar ilişkisini tutan tablo
yazar_Id int NOT NULL primary key, -- Benzersiz ilişki numarası
Yazar_No int foreign key (Yazar_No) references Yazarlar(Yazar_No), -- Yazar numarası
ISBN int Foreign Key (ISBN) references kitaplar(ISBN) -- Kitap ISBN
);



8)
create table Yazarlar( -- Yazar bilgilerini tutan tablo
Yazar_No int NOT NULL primary key identity(1,1), -- Benzersiz yazar numarası
yazar_adi nvarchar(100), -- Yazarın adı
yazar_soyadi nvarchar(100) -- Yazarın soyadı
);



9)
create table Kategoriler( -- Kitap kategorilerini tutan tablo
kategori_no int NOT NULL primary key identity(1,1), -- Benzersiz kategori numarası
kategori_adi nvarchar(100) NOT NULL -- Kategori adı (boş olamaz)
);



10)
create table katogori_bulunur( -- Kitap-Kategori ilişkisini tutan tablo
Id int NOT NULL primary key identity(1,1), -- Benzersiz ilişki numarası
ISBN int Foreign Key (ISBN) references kitaplar(ISBN), -- Kitap ISBN
kategori_no int Foreign Key (kategori_no) references Kategoriler(kategori_no) -- Kategori numarası
); 
